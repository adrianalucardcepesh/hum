const { Telegraf, Markup, Scenes, session } = require('telegraf');
const { insertAndShowProfile } = require('./insertAndShowProfile');


function createScenes(bot) {

    const nameScene = new Scenes.BaseScene('name');

    nameScene.enter((ctx) => {
        ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–µ –∏–º—è:');
    });

    nameScene.on('text', (ctx) => {
        if (!ctx.message.text) {
            ctx.reply('–ò–º—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è!');
            return;
        }

        ctx.session.name = ctx.message.text;

        ctx.scene.enter('surname');
    });

// –°—Ü–µ–Ω–∞ 'surname'
    const surnameScene = new Scenes.BaseScene('surname');
    surnameScene.enter((ctx) => ctx.reply('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É —Ñ–∞–º–∏–ª–∏—é:'));
    surnameScene.on('text', (ctx) => {
        ctx.session.surname = ctx.message.text;
        ctx.scene.enter('city');
    });

// –°—Ü–µ–Ω–∞ 'city'
    const cityScene = new Scenes.BaseScene('city');
    cityScene.enter((ctx) => ctx.reply('–ì–æ—Ä–æ–¥ –∏ —Å—Ç—Ä–∞–Ω–∞ –≤ –∫–æ—Ç–æ—Ä–æ–π –≤—ã –ø—Ä–æ–∂–∏–≤–∞–µ—Ç–µ:'));
    cityScene.on('text', (ctx) => {
        ctx.session.city = ctx.message.text;
        ctx.scene.enter('age');
    });


// –°—Ü–µ–Ω–∞ 'age'
    const ageScene = new Scenes.BaseScene('age');

    ageScene.enter((ctx) => {
        ctx.reply('–°–∫–æ–ª—å–∫–æ –≤–∞–º –ª–µ—Ç?');
    });

    ageScene.on('text', (ctx) => {
        const age = Number(ctx.message.text);

        if (isNaN(age)) {
            ctx.reply('–í–≤–µ–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç –≤ –≤–∏–¥–µ —á–∏—Å–ª–∞');
            return;
        }

        if (age < 18) {
            ctx.reply('–í–∞–º –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 18 –ª–µ—Ç');
            return;
        } else if (age > 60) {
            ctx.reply('–í–∞–º –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–µ–Ω—å—à–µ 60 –ª–µ—Ç');
            return;
        }

        ctx.session.age = age;

        ctx.scene.enter('role');
    });

// –°—Ü–µ–Ω–∞ 'role'
    const roleScene = new Scenes.BaseScene('role');

    roleScene.enter((ctx) => {
        ctx.reply('–ö–∞–∫–∞—è —É –≤–∞—Å —Ä–æ–ª—å –≤ —Å–µ–∫—Å–µ?');
    });

    roleScene.on('text', (ctx) => {
        if (!ctx.message.text) {
            ctx.reply('–≠—Ç–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è!');
            return;
        }

        ctx.session.role = ctx.message.text;

        ctx.scene.enter('info');
    });

// –°—Ü–µ–Ω–∞ 'info'
    const infoScene = new Scenes.BaseScene('info');

    infoScene.enter((ctx) => {
        ctx.reply('–ù–∞–ø–∏—à–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ –æ —Å–µ–±–µ:');
    });

    infoScene.on('text', (ctx) => {
        if (!ctx.message.text) {
            ctx.reply('–≠—Ç–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è!');
            return;
        }

        ctx.session.info = ctx.message.text;

        ctx.scene.enter('search');
    });

// –°—Ü–µ–Ω–∞ 'search'
    const searchScene = new Scenes.BaseScene('search');
    searchScene.enter((ctx) => ctx.reply('–û–ø–∏—à–∏—Ç–µ –∫—Ä–∞—Ç–∫–æ –∫–æ–≥–æ –∏–ª–∏ —á—Ç–æ –≤—ã –∏—â–∏—Ç–µ: –¥—Ä—É–≥–∞, –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –ø–æ —Å–µ–∫—Å—É, –æ—Ç–Ω–æ—à–µ–Ω–∏—è, –¥–µ–ª–æ–≤–æ–≥–æ –ø–∞—Ä—Ç–Ω–µ—Ä–∞, —Ç–æ–≤–∞—Ä–∏—â–∞ –ø–æ –ø–µ—Ä–µ–ø–∏—Å–∫–µ, —Ä–∞–±–æ—Ç—É, —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –∏–ª–∏ –º–æ—Ä–∞–ª—å–Ω—É—é –ø–æ–º–æ—â—å –∏ —Ç.–¥'));
    searchScene.on('text', (ctx) => {
        ctx.session.search = ctx.message.text;
        ctx.scene.enter('goal');
        // –í–∞—à –∫–æ–¥ –∑–¥–µ—Å—å
    });

// –°—Ü–µ–Ω–∞ 'goal'
    const goalScene = new Scenes.BaseScene('goal');

    goalScene.enter((ctx) => {
        ctx.reply('–ù–∞–ø–∏—à–∏—Ç–µ —Ü–µ–ª—å –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞:');
    });

    goalScene.on('text', (ctx) => {
        if (!ctx.message.text) {
            ctx.reply('–≠—Ç–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è!');
            return;
        }

        ctx.session.goal = ctx.message.text;

        ctx.scene.enter('media');
    });

// –õ–æ–≥–∏–∫–∞ —Å—Ü–µ–Ω—ã 'media'


    const mediaScene = new Scenes.BaseScene('media');



    const fs = require('fs');
    const path = require('path');
    const fetch = require('node-fetch');

    mediaScene.enter((ctx) => {

        ctx.reply('–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Å–≤–æ—ë —Ñ–æ—Ç–æ üñº –∏–ª–∏ –≤–∏–¥–µ–æ üé• (mp4) \n \n –ú–∞–∫—Å. —Ä–∞–∑–º–µ—Ä —Ñ–æ—Ç–æ –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–∞–≤–ª—è—Ç—å –Ω–µ –±–æ–ª—å—à–µ - 5 –ú–ë ' +
            '\n –ú–∞–∫—Å. —Ä–∞–∑–º–µ—Ä –≤–∏–¥–µ–æ –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–∞–≤–ª—è—Ç—å –Ω–µ –±–æ–ª—å—à–µ - 50 –ú–ë' +
            '\n \n –í–Ω–∏–º–∞–Ω–∏–µ! ‚ö†Ô∏è \n \n  –ï—Å–ª–∏ –≤—ã –∑–∞–≥—Ä—É–∂–∞–µ—Ç–µ —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥—Ä—É–≥–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ (—Ç.–µ. –Ω–µ –≤–∞—à–µ —Ñ–æ—Ç–æ), –≤—ã –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ –ø–æ–ø–∞–¥–∞–µ—Ç–µ –≤ —á–µ—Ä–Ω—ã–π –±–∞–Ω üö´ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞. \n \n –ó–∞–≥—Ä—É–∑–∏—Ç—å –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –∏–ª–∏ –≤–∏–¥–µ–æ! ‚Äç‚úàÔ∏è' +
            '\n \n –ú–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:\n' +
            '\n' +
            '‚öß –°–≤–æ—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é \n' +
            '\n' +
            '‚öß –ê–Ω–∏–º–µ –∫–∞—Ä—Ç–∏–Ω–∫—É\n' +
            '\n' +
            '‚öß –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –Ω–∞ –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç—É –ª–∏—Ü –ª—é–¥–µ–π\n' +
            '\n' +
            '‚öß –ú–µ–º–∞—Å–∏–∫–∏\n' +
            '\n' +
            '‚öß –û—Ç—Ä—ã–≤–∫–∏ –∏–∑ —Ñ–∏–ª—å–º–æ–≤\n' +
            '\n' +
            '‚öß –ú–µ–º-–≤–∏–¥–µ–æ\n' +
            '\n' +
            '‚öß –í–∞—à–µ Tik-Tok –≤–∏–¥–µ–æ (mp4)\n' +
            '\n' +
            '‚öß –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å—Ç–∏–∫–µ—Ä—ã');
    });

    mediaScene.on(['photo', 'video'], async (ctx) => {



        const MAX_VIDEO_SIZE = 50 * 1024 * 1024; // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –≤–∏–¥–µ–æ (50 MB)
        const MAX_PHOTO_SIZE = 5 * 1024 * 1024; // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–æ—Ç–æ (5 –ú–ë)

        const fileId = ctx.message.video ? ctx.message.video.file_id : ctx.message.photo[ctx.message.photo.length - 1].file_id;
        const fileSize = ctx.message.video ? ctx.message.video.file_size : ctx.message.photo[ctx.message.photo.length - 1].file_size;




        const validVideoExtensions = ['mp4'];
        const validPhotoExtensions = ['jpg', 'jpeg', 'png', 'gif'];

        const isVideo = !!ctx.message.video; // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ñ–∞–π–ª –≤–∏–¥–µ–æ
        const isPhoto = !!ctx.message.photo; // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ñ–∞–π–ª —Ñ–æ—Ç–æ

        const fileType = isVideo ? 'video' : 'photo';


        if (isVideo) {
            const extension = fileExtension(fileId);
            if (extension && !validVideoExtensions.includes(extension.toLowerCase())) {
                ctx.reply('–§–æ—Ä–º–∞—Ç –≤–∏–¥–µ–æ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å MP4.');
                return;
            }
        } else if (isPhoto) {
            const extension = fileExtension(fileId);
            if (extension && !validPhotoExtensions.includes(extension.toLowerCase())) {
                ctx.reply('–§–æ—Ä–º–∞—Ç —Ñ–æ—Ç–æ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å JPG, JPEG, PNG –∏–ª–∏ GIF.');
                return;
            }
        }


        console.log('MAX_VIDEO_SIZE –≤ –±–∞–π—Ç–∞—Ö:', MAX_VIDEO_SIZE);
        console.log('MAX_PHOTO_SIZE –≤ –±–∞–π—Ç–∞—Ö:', MAX_PHOTO_SIZE);
        console.log('–†–∞–∑–º–µ—Ä –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –≤ –±–∞–π—Ç–∞—Ö:', fileSize);
        console.log('–†–∞–∑–º–µ—Ä –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞:', fileSize);

        let errorMessage = null;

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –∏ —Ñ–æ—Ä–º–∞—Ç
        if (fileSize > MAX_PHOTO_SIZE && fileType === 'photo') {
            errorMessage =  '\n –í–Ω–∏–º–∞–Ω–∏–µ! ‚ö† \n \n  –ú–∞–∫—Å. —Ä–∞–∑–º–µ—Ä —Ñ–æ—Ç–æ –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–∞–≤–ª—è—Ç—å –Ω–µ –±–æ–ª—å—à–µ - 5 –ú–ë \n \n –ó–∞–≥—Ä—É–∑–∏—Ç—å –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –∏–ª–∏ –≤–∏–¥–µ–æ! ‚Äç‚úàÔ∏è';
        }
        if (fileSize > MAX_PHOTO_SIZE && fileType === 'video') {
            errorMessage =  '\n –í–Ω–∏–º–∞–Ω–∏–µ! ‚ö† \n \n  –ú–∞–∫—Å. —Ä–∞–∑–º–µ—Ä –≤–∏–¥–µ–æ –Ω–µ –±–æ–ª—å—à–µ 50 –ú–ë \n \n  –ó–∞–≥—Ä—É–∑–∏—Ç—å –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –∏–ª–∏ –≤–∏–¥–µ–æ! ‚Äç‚úàÔ∏è';
        }


        if (errorMessage) {
            ctx.reply(errorMessage);
            await ctx.scene.reenter(); // –ü–æ–≤—Ç–æ—Ä–Ω–æ –≤—ã–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ü–µ–Ω—É
            // –í —ç—Ç–æ–º –º–µ—Å—Ç–µ –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        } else {
            // –ï—Å–ª–∏ —Ä–∞–∑–º–µ—Ä –∏ —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞ –ø—Ä–æ—à–ª–∏ –≤–∞–ª–∏–¥–∞—Ü–∏—é, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∫—É –∏ –∑–∞–≥—Ä—É–∑–∫—É –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
            const file = await ctx.telegram.getFile(fileId);
            const url = `https://api.telegram.org/file/bot6429157048:AAHgx-wS_eqF73lMshCAcHJHI3k_xf516Hk/${file.file_path}`;
            const response = await fetch(url);
            const buffer = await response.buffer();
            const savedPath = path.join(__dirname, 'downloads', fileId);
            fs.writeFileSync(savedPath, buffer);

            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
            await insertAndShowProfile(ctx, fileId, fileType, savedPath, ctx.session);
        }
    });

    const finishScene = new Scenes.BaseScene('finishScene');
    finishScene.enter((ctx) => {
        console.log('Entering finishScene');
        ctx.reply('–ü—Ä–∏—è—Ç–Ω—ã—Ö –≤–∞–º –Ω–æ–≤—ã—Ö –∑–Ω–∞–∫–æ–º—Å—Ç–≤ ‚úåüèº');

        ctx.scene.leave(); // –∑–∞–≤–µ—Ä—à–∞–µ–º —Å—Ü–µ–Ω—ã
    });

// –î–æ–±–∞–≤–ª—è–µ–º —Å—Ü–µ–Ω—ã –≤ –æ–±—ä–µ–∫—Ç Scenes.Stage

    const stage = new Scenes.Stage([nameScene, surnameScene, cityScene, ageScene, roleScene, infoScene, searchScene, goalScene, mediaScene, finishScene]);
    bot.use(stage.middleware());

    return stage; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ä–µ–∫—Ç Scenes.Stage
}

const fileExtension = (fileId) => {
    const parts = fileId.split('.');
    if (parts.length > 1) {
        return parts[parts.length - 1].toLowerCase();
    }
    return null;
};


module.exports = {
    createScenes
}